::（大多和）
1
それでは、私たち９班の発表を始めます。
私たちが制作したゲームはWood＆Rock BUILDERSというゲームです
(Enter)

2
まず初めにチームメンバーの紹介をします。

リーダーの大多和です、ネットワークを主に担当しています
メインプログラムやモデル・UI等を担当している江上です
NPCのプログラムを担当している杉山です。
(Enter)

3
ゲーム全体の概要を説明します。
プレイ人数は１人から、最大人数はn人のマルチプレイゲームです。
一部1人専用のモードが存在します

プラットフォームはＰＣで
ジャンルはクラフト＆タワーディフェンスとアクションです。

制作はUnityのURPで行っております
URPに関してはグラフィックに関しての説明の際に説明をしようと思います
(Enter)

4
初めにデモ動画をご覧ください。
-動画-
-動画終わり-
(Enter)

5
ゲームのシーン遷移について説明します
タイトルからログイン画面へと進み、プレイヤー名を入力します
ルーム選択をすることでゲームプレイが開始となり、拠点シーンへと移ります

ゲーム内では建築・クラフトが可能な拠点シーンと、
素材を集めるアクションミニゲームの採取シーンを行き来する形になっています。
(Enter)

6
ログインと拠点シーンについて、動画を見ながら説明します。
-動画-

プレイヤー名の入力で個人ルーム、ルームIDの追加入力で他プレイヤーのルームに入室できます。
ルームIDについては後で改めて詳しく説明します。
ルームを選択したら拠点に移行します。

拠点シーンは、マルチプレイが可能なクラフトゲームです。
シーンの中でも三つのプレイヤー状態があり、Qキーで移行しています。

一つが移動をメインとした基本の状態です。
カメラの向きを自由に変えながら移動することができます。

二つ目がオブジェクトを置ける建築状態です。
見下ろし型進行となっており、地面にグリッド線、画面下にインベントリが表示されます。
インベントリはFキーで移動ができ、置きたい家具を選択し地面を左クリックすると配置されます。
右クリックで撤去もされます。

シフトキーを押しながら右クリックで、家具を回転させることもできます。
置いた家具の上に積み重ねても置けるようにもなっています。
操作を終了するとこんな感じで反映されています。

最後に家具を制作するクラフト状態です。
WSキーで上下に選択し、Shiftキーで制作できます。
制作した家具は先程の建築シーンにあったインベントリか、アイテムバッグの中に保存されます。

アイテムバッグはEキー、もしくは右下の鞄ボタンで開き、所持アイテムの確認ができます。
インベントリに同じ種別のアイテムが一つも無い場合のみ、アイテムバッグに保存されるようになっています。
アイテムバッグとインベントリの二つを開くことで、左クリックでアイテムをお互いに移し替えることができます。

また外見変更のシステムもあります。
Xキーもしくは右下のパレットボタンを押すと、プレイヤーの色変更画面が開きます。
色相、明度、彩度の順にスライダーを移動させ、画面を閉じることで反映されます
-動画終わり-

拠点シーンの主な説明は以上です、採取シーンの説明に移ります。
(Enter)

7
採取パートについての解説をします。

採取パートは拠点で使用される資材やお金などを集めるためのパートです。
暗い森の中、荷車を護衛して木などを集めながら敵を倒し、ゴール地点を目指すゲームとなっています。
(Enter)

8
採取では主に4つのアイテムを獲得できます。
木を攻撃することで木材を、岩を攻撃することで鉱石、薬草を積むことで回復アイテム、
草を攻撃するとコインがドロップします。
(Enter)

9
まずはプレイ動画をご覧ください。

-動画-
NPCとのソロプレイと4人までのマルチプレイに対応しています。
今回はソロプレイでの動画になります。ソロプレイの場合は、3人のNPCが助けに入ってくれます。

道中のオブジェクトはすべて自動生成となっております。
木を攻撃してドロップした木材を右クリックでつかみ、荷車に近づき再度右クリックで積むことができます。
準備が整ったら、集合地点に集まり、全員が集まって一定時間経過すると進行が始まります。

荷車が発進すると敵が前後から湧くようになります。
敵の攻撃がプレイヤーに当たるとダメージを受け、荷車にあたると荷物を落としてしまいます。

道中ランダムで登場するギミックをいくつか紹介します。

一つ目は倒木です。倒木にぶつかると積み荷を落としてしまうのであらかじめ破壊しましょう。

こちらは分かれ道です。看板を選択して左右どちらに進むか決定できます。
右に行くと通常通りのルート、左に行くと危険ではあるもののリターンも多いルートとなっております。

一定時間ごとに夜がやってきます。
夜は明かりをつけないと真っ暗なうえ、明かりの範囲内にいないと攻撃のヒット率が低下します。
明かりは馬車の後ろに近づいてFキーを押すと、木を消費して数秒間明かりをつけられます。

一定時間ごとにアーティファクトが出現します。
これはショップで、木を入手、倒木を除去、ドロップ数2倍などのバフなどが出現します。

今、青いドーム状のエフェクトを出したのが中ボスです。中ボスは2人以上で戦わないと倒せない程度の強さになっています。
倒すと宝箱をドロップし、大量のコインや木を獲得できます。

終点に到達するとボスとの戦闘です。
UIが暴れていますが動画制作時のバグです。
紹介動画のために、今回ボスはかなり弱めに設定してますが、実際は手ごたえある戦闘になると思われます
ボスを倒すとリザルト画面に移り、獲得した物資を持ち帰れます
-動画終わり-
(Enter)

10
開発にあたってURPを採用しました。
URPとはユニバーサルレンダーパイプラインの略で、モバイル機などを含む幅広い端末で動く軽量なレンダリングパイプラインのことです。
URPを採用した理由としては軽量化できる項目が多く、またポストエフェクトを利用して表現できる幅が広がるからです。
ポストエフェクトを適用することで一気に表現の幅が広がります。
暗い森の中を表現するためにポストエフェクトを自作しました。
(Enter)

11
エフェクトもいくつか自作しました。URPの機能のシェーダーグラフを利用しています。
(Enter)

12
モデルはアセットと自作が混在しています。
自作のものは軽量化を意識してローポリになるように作り、ハイポリのアセットはポリゴンを削り軽量化しました。
(Enter)

13
Tewwnについてです。Tweenとはunityにおいてスクリプトによるアニメーションのことを言います。
代表的なアセットにDOTweenなどがあり、制作で使ったことがある人がいると思います。
今回はこの投げるアニメーションのためにTweenを自作しました。
投げるアニメーションは、1行のコードだけで簡単にアニメーションができるようなシステムを作成しました。
(Enter)

14
今回開発で意識した点として軽量化、最適化があります。
最適化とはプログラムの処理速度や消費メモリなどを改善し、ゲームのパフォーマンスを向上させることをいいます。

多くの項目がありますが、一例を紹介させていただきます。
(Enter)

15
オクルージョンカリングを採用して、カメラ外のオブジェクトを透明化することでGPUへの負荷を軽減し、
描画速度が向上しました。
ゲームの性質上描画オブジェクトがどうしても多くなり、重くなる原因となっていました。
しかし、カメラ外のオブジェクトのモデルを透明化させることで描画処理が軽くなり、
動作に支障が無くなります。
(Enter)

16
容量の大きくなる主な原因であるテクスチャを圧縮し、読み込む際に展開することでテクスチャ容量の削減になります
わかりやすいようにあ、い、うで説明させていただきます。
それぞれが10メガバイトずつの容量があり、圧縮なしだと30メガバイトになります。
しかし、圧縮して一つにまとめることで15メガバイトのテクスチャ1枚にすることができ、
ゲームを読み込む際に展開することで必要な容量の削減をしています
(Enter)

17
transformへのアクセスは内部的にはGetTransformという関数が呼び出されているので、
その呼び出しを省略してメモリにキャッシュしておくことで数ミリ秒アクセスが高速化します
所詮数ミリ秒かと思いますが、複数のオブジェクトで毎フレームアクセスしている場合もあるので
全体的にかなり軽くなります
(Enter)

18
次にNPCの説明をします。
現在画面に映っているのが、採取をする際に助けてくれる味方のNPCです。
味方NPCは全部で3体となっており、プレイヤー同様に素材を集める、敵に攻撃する、点火などを行います
味方NPCはプレイヤーの行動や採取モードの結果を基にして、成長・変化するようになっています
(Enter)

19
それでは味方のNPCの動きの動画をいくつかご覧ください
この動画はNPCが素材を採取する様子です。
赤い輪っかに囲まれている子たちが味方のNPCです
この子たちは初期の状態では自らに一番近いオブジェクトをターゲットにするようになっています
同じオブジェクトをターゲットとしている時もあります
(Enter)

20
それでは次の動画です。
素材を採取する部分は同じですね
これは採取ゲームを何回かプレイした後の成長したNPCとなります
味方NPCは採取ゲームをプレイすることで経験値を得てレベルが上がり成長するようになっています
先程とは違い、それぞれ別のオブジェクトをターゲットとしています
(Enter)

21
こちらが先程2つの動画を切り抜いたものです
どちらもそれぞれ右上の木をターゲットとしているNPCがいますが
初期段階よりも成長後のNPCの方がバラバラになっているのがわかると思います
効率よく採取をするように成長していますね
(Enter)

22
ここで味方NPCの成長要素に関しての説明をします
成長要素を管理するためにJSONと呼ばれるものを利用しています
JSONとは「JavaScript Object Notation」の略で、「JavaScriptのオブジェクトの書き方を元にしたデータ定義方法」のことです。
Unityではセーブ機能などを作る際によく利用されています。
今回はNPCステータスを保存するために利用しています
採取モードをプレイする際に味方NPCのデータとしてJSONファイル内のデータを取り込みます。
採取モードをクリアした後のリザルトにてその時の採取モードでの結果を元にステータスデータを更新します
こうすることで次回のプレイでは今回更新したデータを取り込んで遊ぶことが出来ます
(Enter)

23
次に敵NPCの説明をします
今、こちらに走ってきているのが敵エネミーとなっています
先程の映像でも映りましたが、役割によって大きさが異なります
(Enter)

24
それでは動画を一つご覧ください
今回は敵NPCの共通の動きの説明をします
敵NPCは基本的にはプレイヤーを追尾します
そしてプレイヤーが一定範囲内に入ると攻撃をするようになっています
攻撃をする際に範囲がわかるように攻撃の前兆が表示され、攻撃範囲内にいるとダメージを受けます
(Enter)

25
次に敵NPCの攻撃方法の紹介です
現在画面に映っているものが敵NPCの攻撃方法の一例となります
敵の種類によって攻撃の種類も異なります
(Enter)

（大多和）
26
マルチプレイを実装するにあたっての技術点の説明です

まず初めにデータ形式を工夫しました。
JSONデータで保存し、起動中はUnityの機能であるDictionary型へ変換することで、
参照のしやすいデータ形式を作成しています。

Dictionary型とは名の通り辞書のようなデータ型で、
例としてアイテムデータの保存スクリプトを表示しています。

Keyという検索ワードにアイテム名、検索結果のValueにJsonから変換したクラスデータを挿入します。
これにより多数のアイテム状態を、一つのデータで簡潔に纏めることができています。
拠点シーンで配置した家具の座標データなども、同じように管理しています。
(Enter)

27
マルチプレイについて、動画を見ながら説明します。
-動画-
まずルームマスターとなる一人が個人ルームに入り、左上にあるノートボタンをクリックして
ルームIDである自分のIPアドレスをクリップボードヘコピーし、メンバーたちへ共有します。
-動画終わり-

-クリックアニメーション(次の動画表示)-

-動画-
メンバーたちは共有されたIDを、ルームIDの欄に入力することで、
部屋データがルームマスターより送信されログインすることができます。
ログイン先の拠点ではプレイヤーの動作、家具の配置情報などが自動で共有されます。
こんな感じで家具情報が置き換えられます。
-動画終わり-
(Enter)

28
実装方法です。
実装にはマルチキャストを採用しています。
ルームマスターが宛先IPアドレスというものを作成し、メンバーはアドレスに
参加要請を出すことで、マルチキャストグループへ参加します。

あとは宛先IPアドレス宛にデータを送ると、自動で参加しているメンバー全員にデータが送信されるシステムです。
パケットの通信方法をUDP、受信処理を別スレッドで行うなどし、負荷の軽減をしています。
興味のある方はぜひ詳しく調べてみてください。
(Enter)

29
クラス図の説明です。
中央にあるUdpSoketがネットワーク管理、右のGameDataとNpcStatusがJson管理になっています。
(Enter)

30
全体の制作物です。
書いたプログラムは総計8700lok程度です。
エフェクトは5つ、モデルは15個ほど自作しています。
(Enter)

31
統括です
メンバー全員が初めてのことに挑戦したので、技術点に自信のあるゲームになりました。
AWS、Pythonなど機能試験の関係で使わなかった技術も多くあります。
例にあげると当初は、JSONではなくAWSでのデータ管理を予定していましたが、
AWSの環境構築と通信方法は確立したものの、SQLを組み立てる工数が足りずに断念されています。
全体的にゲームの軽量化、最適化を心掛けました。
(Enter)

32
ご清聴ありがとうございました
(Enter)

33
質疑応答に移ります。

以上で9班の発表を終わります。ありがとうございました。